{"version":3,"sources":["expression.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_typeof","Symbol","iterator","obj","constructor","$","$$","Mavo","attributes","push","_","Expression","Class","expression","this","eval","data","oldValue","value","hooks","run","compile","exception","context","toString","live","static","serializers","BinaryExpression","node","serialize","left","operator","right","UnaryExpression","argument","CallExpression","callee","arguments","map","join","ConditionalExpression","test","consequent","alternate","MemberExpression","object","property","name","ArrayExpression","elements","Literal","raw","Identifier","ThisExpression","Compound","body","transformations","Script","getOperatorName","nodeLeft","operators","args","unshift","type","ret","undefined","rewrite","code","parse","e","Function","self","jsep","addBinaryOp","removeBinaryOp","LogicalExpression","Syntax","start","end","regex","RegExp","escapeRegExp","str","lastIndex","tokenize","match","exec","index","substring","create","element","syntax","getAttribute","trim","prototype","bind","apply","concat","split","ESCAPE","Text","o","group","path","fallback","reduce","childNodes","attribute","nodeType","parentNode","children","normalize","firstChild","whitespace","textContent","splitText","after","lastChild","insertBefore","template","set","get","update","_this","expr","env","Error","presentational","Primitive","formatNumber","primitive","datatype","setValue","WeakMap","search","all","filter","et","Expressions","_this2","expressions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","err","closest","traverse","dependents","Set","active","addEventListener","evt","isDeleted","size","getRelativeData","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ref","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","exp","extract","directives","indexOf","slice","_this3","is","forEach","child","Proxy","add","_this4","options","relative","proxy","mavo","id","walkUp","getData","has","find","item","Node","store","null","unhandled","expressionText","modes","_this5","requestAnimationFrame","Bliss","getValueAttribute","getValue","parentIf","childIfs","_this6","treeBuilt","then","parentValue","comment","replaceChild","document","createComment","childProperties","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","hidden","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","childIf","result","_hidden","dataChanged","lazy","_this7","properties","selectors","el","dispatchEvent"],"mappings":"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","file":"mavo.min.js","sourcesContent":["(function($, $$) {\n\nMavo.attributes.push(\"mv-expressions\", \"mv-value\", \"mv-if\");\n\nvar _ = Mavo.Expression = $.Class({\n\tconstructor: function(expression) {\n\t\tthis.expression = expression;\n\t},\n\n\teval: function(data) {\n\t\tthis.oldValue = this.value;\n\n\t\tMavo.hooks.run(\"expression-eval-beforeeval\", this);\n\n\t\ttry {\n\t\t\tif (!this.function) {\n\t\t\t\tthis.function = _.compile(this.expression);\n\t\t\t}\n\n\t\t\tthis.value = this.function(data);\n\t\t}\n\t\tcatch (exception) {\n\t\t\tMavo.hooks.run(\"expression-eval-error\", {context: this, exception});\n\n\t\t\tthis.value = exception;\n\t\t}\n\n\t\treturn this.value;\n\t},\n\n\ttoString() {\n\t\treturn this.expression;\n\t},\n\n\tlive: {\n\t\texpression: function(value) {\n\t\t\tvar code = value = value;\n\n\t\t\tthis.function = null;\n\t\t}\n\t},\n\n\tstatic: {\n\t\t/**\n\t\t * These serializers transform the AST into JS\n\t\t */\n\t\tserializers: {\n\t\t\t\"BinaryExpression\": node => `${_.serialize(node.left)} ${node.operator} ${_.serialize(node.right)}`,\n\t\t\t\"UnaryExpression\": node => `${node.operator}${_.serialize(node.argument)}`,\n\t\t\t\"CallExpression\": node => `${_.serialize(node.callee)}(${node.arguments.map(_.serialize).join(\", \")})`,\n\t\t\t\"ConditionalExpression\": node => `${_.serialize(node.test)}? ${_.serialize(node.consequent)} : ${_.serialize(node.alternate)}`,\n\t\t\t\"MemberExpression\": node => `${_.serialize(node.object)}[\"${node.property.name || node.property.value}\"]`,\n\t\t\t\"ArrayExpression\": node => `[${node.elements.map(_.serialize).join(\", \")}]`,\n\t\t\t\"Literal\": node => node.raw,\n\t\t\t\"Identifier\": node => node.name,\n\t\t\t\"ThisExpression\": node => \"this\",\n\t\t\t\"Compound\": node => node.body.map(_.serialize).join(\" \")\n\t\t},\n\n\t\t/**\n\t\t * These are run before the serializers and transform the expression to support MavoScript\n\t\t */\n\t\ttransformations: {\n\t\t\t\"BinaryExpression\": node => {\n\t\t\t\tlet name = Mavo.Script.getOperatorName(node.operator);\n\t\t\t\tlet details = Mavo.Script.operators[name];\n\n\t\t\t\t// Flatten same operator calls\n\t\t\t\tvar nodeLeft = node;\n\t\t\t\tvar args = [];\n\n\t\t\t\tdo {\n\t\t\t\t\targs.unshift(nodeLeft.right);\n\t\t\t\t\tnodeLeft = nodeLeft.left;\n\t\t\t\t} while (Mavo.Script.getOperatorName(nodeLeft.operator) === name);\n\n\t\t\t\targs.unshift(nodeLeft);\n\n\t\t\t\tif (args.length > 1) {\n\t\t\t\t\treturn `${name}(${args.map(_.serialize).join(\", \")})`;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"CallExpression\": node => {\n\t\t\t\tif (node.callee.type == \"Identifier\" && node.callee.name == \"if\") {\n\t\t\t\t\tnode.callee.name = \"iff\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tserialize: node => {\n\t\t\tif (_.transformations[node.type]) {\n\t\t\t\tvar ret = _.transformations[node.type](node);\n\n\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _.serializers[node.type](node);\n\t\t},\n\n\t\trewrite: function(code) {\n\t\t\ttry {\n\t\t\t\treturn _.serialize(_.parse(code));\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// Parsing as MavoScript failed, falling back to plain JS\n\t\t\t\treturn code;\n\t\t\t}\n\t\t},\n\n\t\tcompile: function(code) {\n\t\t\tcode = _.rewrite(code);\n\n\t\t\treturn new Function(\"data\", `with(Mavo.Functions._Trap)\n\t\t\t\t\twith(data) {\n\t\t\t\t\t\treturn ${code};\n\t\t\t\t\t}`);\n\t\t},\n\n\t\tparse: self.jsep,\n\t}\n});\n\nif (self.jsep) {\n\tjsep.addBinaryOp(\"and\", 2);\n\tjsep.addBinaryOp(\"or\", 2);\n\tjsep.addBinaryOp(\"=\", 6);\n\tjsep.removeBinaryOp(\"===\");\n}\n\n_.serializers.LogicalExpression = _.serializers.BinaryExpression;\n_.transformations.LogicalExpression = _.transformations.BinaryExpression;\n\n(function() {\nvar _ = Mavo.Expression.Syntax = $.Class({\n\tconstructor: function(start, end) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.regex = RegExp(`${Mavo.escapeRegExp(start)}([\\\\S\\\\s]+?)${Mavo.escapeRegExp(end)}`, \"gi\");\n\t},\n\n\ttest: function(str) {\n\t\tthis.regex.lastIndex = 0;\n\n\t\treturn this.regex.test(str);\n\t},\n\n\ttokenize: function(str) {\n\t\tvar match, ret = [], lastIndex = 0;\n\n\t\tthis.regex.lastIndex = 0;\n\n\t\twhile ((match = this.regex.exec(str)) !== null) {\n\t\t\t// Literal before the expression\n\t\t\tif (match.index > lastIndex) {\n\t\t\t\tret.push(str.substring(lastIndex, match.index));\n\t\t\t}\n\n\t\t\tlastIndex = this.regex.lastIndex;\n\n\t\t\tret.push(new Mavo.Expression(match[1]));\n\t\t}\n\n\t\t// Literal at the end\n\t\tif (lastIndex < str.length) {\n\t\t\tret.push(str.substring(lastIndex));\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tstatic: {\n\t\tcreate: function(element) {\n\t\t\tif (element) {\n\t\t\t\tvar syntax = element.getAttribute(\"mv-expressions\");\n\n\t\t\t\tif (syntax) {\n\t\t\t\t\tsyntax = syntax.trim();\n\t\t\t\t\treturn /\\s/.test(syntax)? new _(...syntax.split(/\\s+/)) : _.ESCAPE;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tESCAPE: -1\n\t}\n});\n\n_.default = new _(\"[\", \"]\");\n\n})();\n\n(function() {\n\nvar _ = Mavo.Expression.Text = $.Class({\n\tconstructor: function(o) {\n\t\tthis.group = o.group;\n\t\tthis.node = o.node;\n\t\tthis.path = o.path;\n\t\tthis.syntax = o.syntax;\n\t\tthis.fallback = o.fallback;\n\n\t\tif (!this.node) {\n\t\t\t// No node provided, figure it out from path\n\t\t\tthis.node = this.path.reduce((node, index) => {\n\t\t\t\treturn node.childNodes[index];\n\t\t\t}, this.group.element);\n\t\t}\n\n\t\tthis.element = this.node;\n\t\tthis.attribute = o.attribute || null;\n\n\t\tMavo.hooks.run(\"expressiontext-init-start\", this);\n\n\t\tif (!this.expression) { // Still unhandled?\n\t\t\tif (this.node.nodeType === 3) {\n\t\t\t\tthis.element = this.node.parentNode;\n\n\t\t\t\t// If no element siblings make this.node the element, which is more robust\n\t\t\t\t// Same if attribute, there are no attributes on a text node!\n\t\t\t\tif (!this.node.parentNode.children.length || this.attribute) {\n\t\t\t\t\tthis.node = this.element;\n\t\t\t\t\tthis.element.normalize();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.attribute) {\n\t\t\t\tthis.expression = this.node.getAttribute(this.attribute).trim();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Move whitespace outside to prevent it from messing with types\n\t\t\t\tthis.node.normalize();\n\n\t\t\t\tif (this.node.firstChild && this.node.childNodes.length === 1 && this.node.firstChild.nodeType === 3) {\n\t\t\t\t\tvar whitespace = this.node.firstChild.textContent.match(/^\\s*|\\s*$/g);\n\n\t\t\t\t\tif (whitespace[1]) {\n\t\t\t\t\t\tthis.node.firstChild.splitText(this.node.firstChild.textContent.length - whitespace[1].length);\n\t\t\t\t\t\t$.after(this.node.lastChild, this.node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (whitespace[0]) {\n\t\t\t\t\t\tthis.node.firstChild.splitText(whitespace[0].length);\n\t\t\t\t\t\tthis.node.parentNode.insertBefore(this.node.firstChild, this.node);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.expression = this.node.textContent;\n\t\t\t}\n\n\n\t\t\tthis.template = o.template? o.template.template : this.syntax.tokenize(this.expression);\n\t\t}\n\n\t\tMavo.hooks.run(\"expressiontext-init-end\", this);\n\n\t\t_.elements.set(this.element, [...(_.elements.get(this.element) || []), this]);\n\t},\n\n\tupdate: function(data = this.data) {\n\t\tthis.data = data;\n\n\t\tvar ret = {};\n\n\t\tMavo.hooks.run(\"expressiontext-update-start\", this);\n\n\t\tret.value = this.value = this.template.map(expr => {\n\t\t\tif (expr instanceof Mavo.Expression) {\n\t\t\t\tvar env = {context: this, expr};\n\n\t\t\t\tMavo.hooks.run(\"expressiontext-update-beforeeval\", env);\n\n\t\t\t\tenv.value = env.expr.eval(data);\n\n\t\t\t\tMavo.hooks.run(\"expressiontext-update-aftereval\", env);\n\n\t\t\t\tif (env.value instanceof Error) {\n\t\t\t\t\treturn this.fallback !== undefined? this.fallback : env.expr.expression;\n\t\t\t\t}\n\t\t\t\tif (env.value === undefined || env.value === null) {\n\t\t\t\t\t// Don’t print things like \"undefined\" or \"null\"\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\treturn env.value;\n\t\t\t}\n\n\t\t\treturn expr;\n\t\t});\n\n\t\tif (!this.attribute) {\n\t\t\t// Separate presentational & actual values only apply when content is variable\n\t\t\tret.presentational = this.value.map(value => {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\treturn value.join(\", \");\n\t\t\t\t}\n\n\t\t\t\tif (typeof value == \"number\") {\n\t\t\t\t\treturn Mavo.Primitive.formatNumber(value);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t});\n\n\t\t\tret.presentational = ret.presentational.length === 1? ret.presentational[0] : ret.presentational.join(\"\");\n\t\t}\n\n\t\tret.value = ret.value.length === 1? ret.value[0] : ret.value.join(\"\");\n\n\t\tif (this.primitive && this.template.length === 1) {\n\t\t\tif (typeof ret.value === \"number\") {\n\t\t\t\tthis.primitive.datatype = \"number\";\n\t\t\t}\n\t\t\telse if (typeof ret.value === \"boolean\") {\n\t\t\t\tthis.primitive.datatype = \"boolean\";\n\t\t\t}\n\t\t}\n\n\t\tif (ret.presentational === ret.value) {\n\t\t\tret = ret.value;\n\t\t}\n\n\t\tif (this.primitive) {\n\t\t\tthis.primitive.value = ret;\n\t\t}\n\t\telse {\n\t\t\tMavo.Primitive.setValue(this.node, ret, {attribute: this.attribute});\n\t\t}\n\n\t\tMavo.hooks.run(\"expressiontext-update-end\", this);\n\t},\n\n\tstatic: {\n\t\telements: new WeakMap(),\n\n\t\t/**\n\t\t * Search for Mavo.Expression.Text object(s) associated with a given element\n\t\t * and optionally an attribute.\n\t\t *\n\t\t * @return If one argument, array of matching Expression.Text objects.\n\t\t *         If two arguments, the matching Expression.Text object or null\n\t\t */\n\t\tsearch: function(element, attribute) {\n\t\t\tvar all = _.elements.get(element) || [];\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tif (!all.length) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn all.filter(et => et.attribute === attribute)[0] || null;\n\t\t\t}\n\n\t\t\treturn all;\n\t\t}\n\t}\n});\n\n})();\n\n(function() {\n\nvar _ = Mavo.Expressions = $.Class({\n\tconstructor: function(group) {\n\t\tif (group) {\n\t\t\tthis.group = group;\n\t\t\tthis.group.expressions = this;\n\t\t}\n\n\t\tthis.all = []; // all Expression.Text objects in this group\n\n\t\tMavo.hooks.run(\"expressions-init-start\", this);\n\n\t\tif (this.group) {\n\t\t\tvar template = this.group.template;\n\n\t\t\tif (template && template.expressions) {\n\t\t\t\t// We know which expressions we have, don't traverse again\n\t\t\t\tfor (let et of template.expressions.all) {\n\t\t\t\t\tthis.all.push(new Mavo.Expression.Text({\n\t\t\t\t\t\tpath: et.path,\n\t\t\t\t\t\tsyntax: et.syntax,\n\t\t\t\t\t\tattribute: et.attribute,\n\t\t\t\t\t\tgroup: this.group,\n\t\t\t\t\t\ttemplate: et\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar syntax = Mavo.Expression.Syntax.create(this.group.element.closest(\"[mv-expressions]\")) || Mavo.Expression.Syntax.default;\n\t\t\t\tthis.traverse(this.group.element, undefined, syntax);\n\t\t\t}\n\t\t}\n\n\t\tthis.dependents = new Set();\n\n\t\tthis.active = true;\n\n\t\t// Watch changes and update value\n\t\tthis.group.element.addEventListener(\"mavo:datachange\", evt => this.update());\n\t},\n\n\t/**\n\t * Update all expressions in this group\n\t */\n\tupdate: function callee() {\n\t\tif (!this.active || this.group.isDeleted() || this.all.length + this.dependents.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar env = { context: this, data: this.group.getRelativeData() };\n\n\t\tMavo.hooks.run(\"expressions-update-start\", env);\n\n\t\tfor (let ref of this.all) {\n\t\t\tref.update(env.data);\n\t\t}\n\n\t\tfor (let exp of this.dependents) {\n\t\t\texp.update();\n\t\t}\n\t},\n\n\textract: function(node, attribute, path, syntax) {\n\t\tif (attribute && attribute.name == \"mv-expressions\") {\n\t\t\treturn;\n\t\t}\n\n\t\tif ((attribute && _.directives.indexOf(attribute.name) > -1) ||\n\t\t    syntax.test(attribute? attribute.value : node.textContent)\n\t\t) {\n\t\t\tthis.all.push(new Mavo.Expression.Text({\n\t\t\t\tnode, syntax,\n\t\t\t\tpath: (path || \"\").slice(1).split(\"/\").map(i => +i),\n\t\t\t\tattribute: attribute && attribute.name,\n\t\t\t\tgroup: this.group\n\t\t\t}));\n\t\t}\n\t},\n\n\t// Traverse an element, including attribute nodes, text nodes and all descendants\n\ttraverse: function(node, path = \"\", syntax) {\n\t\tif (node.nodeType === 8) {\n\t\t\t// We don't want expressions to be picked up from comments!\n\t\t\t// Commenting stuff out is a common debugging technique\n\t\t\treturn;\n\t\t}\n\n\t\tif (node.nodeType === 3) { // Text node\n\t\t\t// Leaf node, extract references from content\n\t\t\tthis.extract(node, null, path, syntax);\n\t\t}\n\t\t// Traverse children and attributes as long as this is NOT the root of a child group\n\t\t// (otherwise, it will be taken care of its own Expressions object)\n\t\telse if (node == this.group.element || !Mavo.is(\"group\", node)) {\n\t\t\tsyntax = Mavo.Expression.Syntax.create(node) || syntax;\n\n\t\t\tif (syntax === Mavo.Expression.Syntax.ESCAPE) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$$(node.attributes).forEach(attribute => this.extract(node, attribute, path, syntax));\n\t\t\t$$(node.childNodes).forEach((child, i) => this.traverse(child, `${path}/${i}`, syntax));\n\t\t}\n\t},\n\n\tstatic: {\n\t\tdirectives: []\n\t}\n});\n\n})();\n\nif (self.Proxy) {\n\tMavo.hooks.add(\"node-getdata-end\", function(env) {\n\t\tif (env.options.relative && env.data && typeof env.data === \"object\") {\n\t\t\tenv.data = new Proxy(env.data, {\n\t\t\t\tget: (data, property, proxy) => {\n\t\t\t\t\t// Checking if property is in proxy might add it to the data\n\t\t\t\t\tif (property in data || (property in proxy && property in data)) {\n\t\t\t\t\t\treturn data[property];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (property == \"$index\") {\n\t\t\t\t\t\treturn this.index + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (property == this.mavo.id) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Look in ancestors\n\t\t\t\t\tvar ret = this.walkUp(group => {\n\t\t\t\t\t\tif (property in group.children) {\n\t\t\t\t\t\t\tgroup.expressions.dependents.add(this.expressions);\n\n\t\t\t\t\t\t\treturn group.children[property].getData(env.options);\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\thas: (data, property) => {\n\t\t\t\t\tif (property in data) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Property does not exist, look for it elsewhere\n\n\t\t\t\t\tif (property == \"$index\" || property == this.mavo.id) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// First look in ancestors\n\t\t\t\t\tvar ret = this.walkUp(group => {\n\t\t\t\t\t\tif (property in group.children) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Still not found, look in descendants\n\t\t\t\t\tret = this.find(property);\n\n\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\tif (Array.isArray(ret)) {\n\t\t\t\t\t\t\tret = ret.map(item => item.getData(env.options))\n\t\t\t\t\t\t\t\t\t .filter(item => item !== null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = ret.getData(env.options);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata[property] = ret;\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tset: function(data, property, value) {\n\t\t\t\t\tthrow Error(\"You can’t set data via expressions.\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\n\nMavo.Node.prototype.getRelativeData = function() {\n\treturn this.getData({\n\t\trelative: true,\n\t\tstore: \"*\",\n\t\tnull: true,\n\t\tunhandled: this.mavo.unhandled\n\t});\n};\n\nMavo.hooks.add(\"group-init-start\", function() {\n\tnew Mavo.Expressions(this);\n});\n\nMavo.hooks.add(\"primitive-init-start\", function() {\n\tthis.expressionText = Mavo.Expression.Text.search(this.element, this.attribute);\n\n\tif (this.expressionText) {\n\t\tthis.expressionText.primitive = this;\n\t\tthis.store = this.store || \"none\";\n\t\tthis.modes = \"read\";\n\t}\n});\n\nMavo.hooks.add(\"group-init-end\", function() {\n\tthis.expressions.update();\n});\n\nMavo.hooks.add(\"group-render-start\", function() {\n\tthis.expressions.active = false;\n});\n\nMavo.hooks.add(\"group-render-end\", function() {\n\trequestAnimationFrame(() => {\n\t\tthis.expressions.active = true;\n\t\tthis.expressions.update();\n\t});\n});\n\n})(Bliss, Bliss.$);\n\n// mv-value plugin\nMavo.Expressions.directives.push(\"mv-value\");\n\nMavo.hooks.add(\"expressiontext-init-start\", function() {\n\tif (this.attribute == \"mv-value\") {\n\t\tthis.attribute = Mavo.Primitive.getValueAttribute(this.element);\n\t\tthis.fallback = this.fallback || Mavo.Primitive.getValue(this.element, {attribute: this.attribute});\n\t\tthis.expression = this.element.getAttribute(\"mv-value\");\n\n\t\tthis.template = [new Mavo.Expression(this.expression)];\n\t\tthis.expression = this.syntax.start + this.expression + this.syntax.end;\n\t}\n});\n\n// mv-if plugin\nMavo.Expressions.directives.push(\"mv-if\");\n\nMavo.hooks.add(\"expressiontext-init-start\", function() {\n\tif (this.attribute != \"mv-if\") {\n\t\treturn;\n\t}\n\n\tthis.expression = this.element.getAttribute(\"mv-if\");\n\tthis.template = [new Mavo.Expression(this.expression)];\n\tthis.expression = this.syntax.start + this.expression + this.syntax.end;\n\n\tthis.parentIf = Mavo.Expression.Text.search(this.element.parentNode.closest(\"[mv-if]\"), \"mv-if\");\n\n\tif (this.parentIf) {\n\t\tthis.parentIf.childIfs = (this.parentIf.childIfs || new Set()).add(this);\n\t}\n});\n\nMavo.hooks.add(\"expressiontext-update-end\", function() {\n\tif (this.attribute != \"mv-if\") {\n\t\treturn;\n\t}\n\n\t// Only apply this after the tree is built, otherwise any properties inside the if will go missing!\n\tthis.group.mavo.treeBuilt.then(() => {\n\t\tvar value = this.value[0];\n\t\tvar oldValue = this.oldValue && this.oldValue[0];\n\n\t\tif (this.parentIf) {\n\t\t\tvar parentValue = this.parentIf.value[0];\n\t\t\tthis.value[0] = value = value && parentValue;\n\t\t}\n\n\t\tif (value === oldValue) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (parentValue !== false) {\n\t\t\t// If parent if was false, it wouldn't matter whether this is in the DOM or not\n\t\t\tif (value) {\n\t\t\t\tif (this.comment && this.comment.parentNode) {\n\t\t\t\t\t// Is removed from the DOM and needs to get back\n\t\t\t\t\tthis.comment.parentNode.replaceChild(this.element, this.comment);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.element.parentNode) {\n\t\t\t\t// Is in the DOM and needs to be removed\n\t\t\t\tif (!this.comment) {\n\t\t\t\t\tthis.comment = document.createComment(\"mv-if\");\n\t\t\t\t}\n\n\t\t\t\tthis.element.parentNode.replaceChild(this.comment, this.element);\n\t\t\t}\n\t\t}\n\n\t\t// Mark any properties inside as hidden or not\n\t\tif (this.childProperties) {\n\t\t\tfor (let property of this.childProperties) {\n\t\t\t\tproperty.hidden = !value;\n\t\t\t}\n\t\t}\n\n\t\tif (this.childIfs) {\n\t\t\tfor (let childIf of this.childIfs) {\n\t\t\t\tchildIf.update();\n\t\t\t}\n\t\t}\n\n\t\tthis.oldValue = this.value;\n\t});\n});\n\nMavo.hooks.add(\"unit-isdatanull\", function(env) {\n\tenv.result = env.result || (this.hidden && env.options.store == \"*\");\n});\n\n$.live(Mavo.Primitive.prototype, \"hidden\", function(value) {\n\tif (this._hidden !== value) {\n\t\tthis._hidden = value;\n\t\tthis.dataChanged();\n\t}\n});\n\n$.lazy(Mavo.Expression.Text.prototype, \"childProperties\", function() {\n\tif (this.attribute != \"mv-if\") {\n\t\treturn;\n\t}\n\n\tvar properties = $$(Mavo.selectors.property, this.element)\n\t\t\t\t\t.filter(el => el.closest(\"[mv-if]\") == this.element)\n\t\t\t\t\t.map(el => Mavo.Node.get(el));\n\n\tif (properties.length) {\n\t\t// When the element is detached, datachange events from properties\n\t\t// do not propagate up to the group so expressions do not recalculate.\n\t\t// We must do this manually.\n\t\tthis.element.addEventListener(\"mavo:datachange\", evt => {\n\t\t\t// Cannot redispatch synchronously\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tif (!this.element.parentNode) { // still out of the DOM?\n\t\t\t\t\tthis.group.element.dispatchEvent(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\t}\n\n\treturn properties;\n});\n"],"sourceRoot":"/source/"}