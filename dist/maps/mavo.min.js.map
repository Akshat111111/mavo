{"version":3,"sources":["expressions.js"],"names":["_typeof","Symbol","iterator","obj","constructor","$","$$","Mavo","attributes","push","_","Expressions","Class","group","_this","this","expressions","all","hooks","run","template","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","et","value","Expression","Text","err","syntax","Syntax","create","element","closest","traverse","dependents","Set","active","addEventListener","evt","update","isDeleted","length","size","env","context","data","getRelativeData","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ref","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","exp","extract","node","attribute","path","name","directives","indexOf","test","textContent","slice","split","map","i","_this2","arguments","nodeType","is","ESCAPE","forEach","childNodes","child","static","self","Proxy","add","_this3","options","relative","get","property","proxy","index","mavo","id","ret","walkUp","children","getData","has","find","Array","isArray","item","filter","set","Error","Node","prototype","store","null","unhandled","_this4","requestAnimationFrame","Bliss","Primitive","getValueAttribute","fallback","getValue","expression","getAttribute","parsed","start","end"],"mappings":"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","file":"mavo.min.js","sourcesContent":["(function($, $$) {\n\nMavo.attributes.push(\"mv-value\", \"mv-if\");\n\nvar _ = Mavo.Expressions = $.Class({\n\tconstructor: function(group) {\n\t\tif (group) {\n\t\t\tthis.group = group;\n\t\t\tthis.group.expressions = this;\n\t\t}\n\n\t\tthis.all = []; // all Expression.Text objects in this group\n\n\t\tMavo.hooks.run(\"expressions-init-start\", this);\n\n\t\tif (this.group) {\n\t\t\tvar template = this.group.template;\n\n\t\t\tif (template && template.expressions) {\n\t\t\t\t// We know which expressions we have, don't traverse again\n\t\t\t\tfor (let et of template.expressions.all) {\n\t\t\t\t\tthis.all.push(new Mavo.Expression.Text({\n\t\t\t\t\t\ttemplate: et,\n\t\t\t\t\t\tgroup: this.group\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar syntax = Mavo.Expression.Syntax.create(this.group.element.closest(\"[mv-expressions]\")) || Mavo.Expression.Syntax.default;\n\t\t\t\tthis.traverse(this.group.element, undefined, syntax);\n\t\t\t}\n\t\t}\n\n\t\tthis.dependents = new Set();\n\n\t\tthis.active = true;\n\n\t\t// Watch changes and update value\n\t\tthis.group.element.addEventListener(\"mavo:datachange\", evt => this.update());\n\t},\n\n\t/**\n\t * Update all expressions in this group\n\t */\n\tupdate: function callee() {\n\t\tif (!this.active || this.group.isDeleted() || this.all.length + this.dependents.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar env = { context: this, data: this.group.getRelativeData() };\n\n\t\tMavo.hooks.run(\"expressions-update-start\", env);\n\n\t\tfor (let ref of this.all) {\n\t\t\tref.update(env.data);\n\t\t}\n\n\t\tfor (let exp of this.dependents) {\n\t\t\texp.update();\n\t\t}\n\t},\n\n\textract: function(node, attribute, path, syntax) {\n\t\tif (attribute && attribute.name == \"mv-expressions\") {\n\t\t\treturn;\n\t\t}\n\n\t\tif ((attribute && _.directives.indexOf(attribute.name) > -1) ||\n\t\t    syntax.test(attribute? attribute.value : node.textContent)\n\t\t) {\n\t\t\tthis.all.push(new Mavo.Expression.Text({\n\t\t\t\tnode, syntax,\n\t\t\t\tpath: path? path.slice(1).split(\"/\").map(i => +i) : [],\n\t\t\t\tattribute: attribute && attribute.name,\n\t\t\t\tgroup: this.group\n\t\t\t}));\n\t\t}\n\t},\n\n\t// Traverse an element, including attribute nodes, text nodes and all descendants\n\ttraverse: function(node, path = \"\", syntax) {\n\t\tif (node.nodeType === 8) {\n\t\t\t// We don't want expressions to be picked up from comments!\n\t\t\t// Commenting stuff out is a common debugging technique\n\t\t\treturn;\n\t\t}\n\n\t\tif (node.nodeType === 3) { // Text node\n\t\t\t// Leaf node, extract references from content\n\t\t\tthis.extract(node, null, path, syntax);\n\t\t}\n\t\t// Traverse children and attributes as long as this is NOT the root of a child group\n\t\t// (otherwise, it will be taken care of its own Expressions object)\n\t\telse if (node == this.group.element || !Mavo.is(\"group\", node)) {\n\t\t\tsyntax = Mavo.Expression.Syntax.create(node) || syntax;\n\n\t\t\tif (syntax === Mavo.Expression.Syntax.ESCAPE) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$$(node.attributes).forEach(attribute => this.extract(node, attribute, path, syntax));\n\t\t\t$$(node.childNodes).forEach((child, i) => this.traverse(child, `${path}/${i}`, syntax));\n\t\t}\n\t},\n\n\tstatic: {\n\t\tdirectives: []\n\t}\n});\n\nif (self.Proxy) {\n\tMavo.hooks.add(\"node-getdata-end\", function(env) {\n\t\tif (env.options.relative && env.data && typeof env.data === \"object\") {\n\t\t\tenv.data = new Proxy(env.data, {\n\t\t\t\tget: (data, property, proxy) => {\n\t\t\t\t\t// Checking if property is in proxy might add it to the data\n\t\t\t\t\tif (property in data || (property in proxy && property in data)) {\n\t\t\t\t\t\treturn data[property];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (property == \"$index\") {\n\t\t\t\t\t\treturn this.index + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (property == this.mavo.id) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Look in ancestors\n\t\t\t\t\tvar ret = this.walkUp(group => {\n\t\t\t\t\t\tif (property in group.children) {\n\t\t\t\t\t\t\tgroup.expressions.dependents.add(this.expressions);\n\n\t\t\t\t\t\t\treturn group.children[property].getData(env.options);\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\thas: (data, property) => {\n\t\t\t\t\tif (property in data) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Property does not exist, look for it elsewhere\n\n\t\t\t\t\tif (property == \"$index\" || property == this.mavo.id) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// First look in ancestors\n\t\t\t\t\tvar ret = this.walkUp(group => {\n\t\t\t\t\t\tif (property in group.children) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Still not found, look in descendants\n\t\t\t\t\tret = this.find(property);\n\n\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\tif (Array.isArray(ret)) {\n\t\t\t\t\t\t\tret = ret.map(item => item.getData(env.options))\n\t\t\t\t\t\t\t\t\t .filter(item => item !== null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = ret.getData(env.options);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata[property] = ret;\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tset: function(data, property, value) {\n\t\t\t\t\tthrow Error(\"You can’t set data via expressions.\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nMavo.Node.prototype.getRelativeData = function() {\n\treturn this.getData({\n\t\trelative: true,\n\t\tstore: \"*\",\n\t\tnull: true,\n\t\tunhandled: this.mavo.unhandled\n\t});\n};\n\nMavo.hooks.add(\"group-init-start\", function() {\n\tnew Mavo.Expressions(this);\n});\n\nMavo.hooks.add(\"group-init-end\", function() {\n\tthis.expressions.update();\n});\n\n\n// Disable expressions during rendering, for performance\nMavo.hooks.add(\"group-render-start\", function() {\n\tthis.expressions.active = false;\n});\n\nMavo.hooks.add(\"group-render-end\", function() {\n\trequestAnimationFrame(() => {\n\t\tthis.expressions.active = true;\n\t\tthis.expressions.update();\n\t});\n});\n\n})(Bliss, Bliss.$);\n\n// mv-value plugin\nMavo.Expressions.directives.push(\"mv-value\");\n\nMavo.hooks.add(\"expressiontext-init-start\", function() {\n\tif (this.attribute == \"mv-value\") {\n\t\tthis.attribute = Mavo.Primitive.getValueAttribute(this.element);\n\t\tthis.fallback = this.fallback || Mavo.Primitive.getValue(this.element, {attribute: this.attribute});\n\t\tthis.expression = this.element.getAttribute(\"mv-value\");\n\n\t\tthis.parsed = [new Mavo.Expression(this.expression)];\n\t\tthis.expression = this.syntax.start + this.expression + this.syntax.end;\n\t}\n});\n"],"sourceRoot":"/source/"}