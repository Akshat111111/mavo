{"version":3,"sources":["storage.github.js"],"names":["$","self","Mavo","_","Storage","Backend","register","Class","extends","id","constructor","this","permissions","on","key","storage","param","url","URL","location","extend","parseURL","repo","branch","path","mavo","login","authenticated","accessToken","req","call","data","method","arguments","length","undefined","o","JSON","stringify","request","responseType","headers","Authorization","fetch","err","xhr","Promise","reject","console","error","log","stack","then","resolve","response","get","username","atob","content","put","_this","file","getFile","fileCall","repoInfo","name","ref","fileInfo","message","btoa","dataString","sha","status","passive","_this2","ready","localStorage","popup","width","Math","min","innerWidth","height","innerHeight","top","screen","screenTop","left","screenLeft","authPopup","open","href","addEventListener","evt","source","Error","getUser","logout","u","user","push","toLowerCase","removeItem","off","wrapper","fire","backend","_this3","accountInfo","avatar_url","static","test","host","ret","pathname","slice","split","match","shift","join","_btoa","_x4","apply","toString","str","unescape","encodeURIComponent","decodeURIComponent","escape","window","Bliss"],"mappings":"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","file":"mavo.min.js","sourcesContent":["(function($) {\n\nif (!self.Mavo) {\n\treturn;\n}\n\nvar _ = Mavo.Storage.Backend.register($.Class({\n\textends: Mavo.Storage.Backend,\n\tid: \"Github\",\n\tconstructor: function() {\n\t\tthis.permissions.on(\"login\");\n\n\t\tthis.key = this.storage.param(\"key\") || \"7e08e016048000bc594e\";\n\n\t\t// Extract info for username, repo, branch, filepath from URL\n\t\tthis.url = new URL(this.url, location);\n\t\t$.extend(this, _.parseURL(this.url));\n\t\tthis.repo = this.repo || \"mv-data\";\n\t\tthis.branch = this.branch || \"master\";\n\t\tthis.path = this.path || `${this.mavo.id}.json`;\n\n\t\tthis.permissions.on(\"read\"); // TODO check if file actually is publicly readable\n\n\t\tthis.login(true);\n\t},\n\n\tget authenticated () {\n\t\treturn !!this.accessToken;\n\t},\n\n\t/**\n\t * Helper method to make a request with the Github API\n\t */\n\treq: function(call, data, method = \"GET\", o = {method: method}) {\n\t\tif (data) {\n\t\t\to.data =  JSON.stringify(data);\n\t\t}\n\n\t\tvar request = $.extend(o, {\n\t\t\tresponseType: \"json\"\n\t\t});\n\n\t\tif (this.authenticated) {\n\t\t\trequest.headers = {\n\t\t\t\t\"Authorization\": `token ${this.accessToken}`\n\t\t\t};\n\t\t}\n\n\t\treturn $.fetch(\"https://api.github.com/\" + call, request)\n\t\t.catch(err => {\n\t\t\tif (err && err.xhr) {\n\t\t\t\treturn Promise.reject(err.xhr);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.error(err);\n\t\t\t\tconsole.log(err.stack);\n\t\t\t}\n\t\t})\n\t\t.then(xhr => Promise.resolve(xhr.response));\n\t},\n\n\tget: function() {\n\t\treturn this.req(`repos/${this.username}/${this.repo}/contents/${this.path}`)\n\t\t       .then(response => Promise.resolve(_.atob(response.content)));\n\t},\n\n\t/**\n\t * Saves a file to the backend.\n\t * @param {Object} file - An object with name & data keys\n\t * @return {Promise} A promise that resolves when the file is saved.\n\t */\n\tput: function(file = this.getFile()) {\n\t\tvar fileCall = `repos/${this.username}/${this.repo}/contents/${file.path}`;\n\n\t\treturn Promise.resolve(this.repoInfo || this.req(\"user/repos\", {\n\t\t\tname: this.repo\n\t\t}, \"POST\"))\n\t\t.then(repoInfo => {\n\t\t\tthis.repoInfo = repoInfo;\n\n\t\t\treturn this.req(fileCall, {\n\t\t\t\tref: this.branch\n\t\t\t});\n\t\t})\n\t\t.then(fileInfo => {\n\t\t\treturn this.req(fileCall, {\n\t\t\t\tmessage: `Updated ${file.name || \"file\"}`,\n\t\t\t\tcontent: _.btoa(file.dataString),\n\t\t\t\tbranch: this.branch,\n\t\t\t\tsha: fileInfo.sha\n\t\t\t}, \"PUT\");\n\t\t}, xhr => {\n\t\t\tif (xhr.status == 404) {\n\t\t\t\t// File does not exist, create it\n\t\t\t\treturn this.req(fileCall, {\n\t\t\t\t\tmessage: \"Created file\",\n\t\t\t\t\tcontent: _.btoa(file.dataString),\n\t\t\t\t\tbranch: this.branch\n\t\t\t\t}, \"PUT\");\n\t\t\t}\n\t\t\t// TODO include time out\n\t\t}).then(data => {\n\t\t\tconsole.log(\"success\");\n\t\t\treturn file;\n\t\t});\n\t},\n\n\tlogin: function(passive) {\n\t\treturn this.ready.then(() => {\n\t\t\tif (this.authenticated) {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\treturn (new Promise((resolve, reject) => {\n\t\t\t\tif (passive) {\n\t\t\t\t\tthis.accessToken = localStorage[\"mavo:githubtoken\"];\n\n\t\t\t\t\tif (this.accessToken) {\n\t\t\t\t\t\tresolve(this.accessToken);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Show window\n\t\t\t\t\tvar popup = {\n\t\t\t\t\t\twidth: Math.min(1000, innerWidth - 100),\n\t\t\t\t\t\theight: Math.min(800, innerHeight - 100)\n\t\t\t\t\t};\n\n\t\t\t\t\tpopup.top = (innerHeight - popup.height)/2 + (screen.top || screenTop);\n\t\t\t\t\tpopup.left = (innerWidth - popup.width)/2 + (screen.left || screenLeft);\n\n\t\t\t\t\tthis.authPopup = open(`https://github.com/login/oauth/authorize?client_id=${this.key}&scope=repo,gist&state=${location.href}`,\n\t\t\t\t\t\t\"popup\", `width=${popup.width},height=${popup.height},left=${popup.left},top=${popup.top}`);\n\n\t\t\t\t\taddEventListener(\"message\", evt => {\n\t\t\t\t\t\tif (evt.source === this.authPopup) {\n\t\t\t\t\t\t\tthis.accessToken = localStorage[\"mavo:githubtoken\"] = evt.data;\n\n\t\t\t\t\t\t\tif (!this.accessToken) {\n\t\t\t\t\t\t\t\treject(Error(\"Authentication error\"));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresolve(this.accessToken);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(() => this.getUser())\n\t\t\t.catch(xhr => {\n\t\t\t\tif (xhr.status == 401) {\n\t\t\t\t\t// Unauthorized. Access token we have is invalid, discard it\n\t\t\t\t\tthis.logout();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(u => {\n\t\t\t\tif (this.user) {\n\t\t\t\t\tthis.permissions.on(\"logout\");\n\n\t\t\t\t\treturn this.req(`repos/${this.username}/${this.repo}`)\n\t\t\t\t\t\t.then(repoInfo => {\n\t\t\t\t\t\t\tthis.repoInfo = repoInfo;\n\n\t\t\t\t\t\t\tif (repoInfo.permissions.push) {\n\t\t\t\t\t\t\t\tthis.permissions.on([\"edit\", \"save\"]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(xhr => {\n\t\t\t\t\t\t\tif (xhr.status == 404) {\n\t\t\t\t\t\t\t\t// Repo does not exist so we can't check permissions\n\t\t\t\t\t\t\t\t// Just check if authenticated user is the same as our URL username\n\t\t\t\t\t\t\t\tif (this.user.login.toLowerCase() == this.username.toLowerCase()) {\n\t\t\t\t\t\t\t\t\tthis.permissions.on([\"edit\", \"save\"]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\tlogout: function() {\n\t\tif (this.authenticated) {\n\t\t\tlocalStorage.removeItem(\"mavo:githubtoken\");\n\t\t\tdelete this.accessToken;\n\n\t\t\tthis.permissions.off([\"edit\", \"add\", \"delete\", \"save\"]).on(\"login\");\n\n\t\t\tthis.mavo.wrapper._.fire(\"mavo:logout\", {backend: this});\n\t\t}\n\n\t\treturn Promise.resolve();\n\t},\n\n\tgetUser: function() {\n\t\treturn this.req(\"user\").then(accountInfo => {\n\t\t\tthis.user = accountInfo;\n\n\t\t\tvar name = accountInfo.name || accountInfo.login;\n\t\t\t$.fire(this.mavo.wrapper, \"mavo:login\", {\n\t\t\t\tbackend: this,\n\t\t\t\tname: `<a href=\"https://github.com/${accountInfo.login}\" target=\"_blank\">\n\t\t\t\t\t\t\t<img class=\"avatar\" src=\"${accountInfo.avatar_url}\" /> ${name}\n\t\t\t\t\t\t</a>`\n\t\t\t});\n\t\t});\n\t},\n\n\tstatic: {\n\t\ttest: function(url) {\n\t\t\turl = new URL(url, location);\n\t\t\treturn /\\bgithub.(com|io)|raw.githubusercontent.com/.test(url.host);\n\t\t},\n\n\t\t/**\n\t\t * Parse Github URLs, return username, repo, branch, path\n\t\t */\n\t\tparseURL: function(url) {\n\t\t\tvar ret = {};\n\n\t\t\turl = new URL(url, location);\n\n\t\t\tvar path = url.pathname.slice(1).split(\"/\");\n\n\t\t\tif (/github.io$/.test(url.host)) {\n\t\t\t\tret.username = url.host.match(/([\\w-]+)\\.github\\.io$/)[1];\n\n\t\t\t\tif (path.length == 1) {\n\t\t\t\t\t// Heuristic to tell apart username.github.io repos from\n\t\t\t\t\t// other gh-pages repos. This is impossible to figure out without a request.\n\t\t\t\t\t// E.g. username.github.io/foo/bar.json could be either repo = username.github.io, path = foo/bar.json\n\t\t\t\t\t// or repo = foo, path = bar.json\n\t\t\t\t\tret.repo = url.host;\n\t\t\t\t\tret.path = path[0];\n\t\t\t\t\tret.branch = \"master\";\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.branch = \"gh-pages\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tret.username = path.shift();\n\t\t\t}\n\n\t\t\tret.repo = path.shift();\n\n\t\t\tif (/raw.githubusercontent.com$/.test(url.host)) {\n\t\t\t\tret.branch = path.shift();\n\t\t\t}\n\t\t\telse if (/github.com$/.test(url.host) && path[0] == \"blob\") {\n\t\t\t\tpath.shift();\n\t\t\t\tret.branch = path.shift();\n\t\t\t}\n\n\t\t\tret.path = path.join(\"/\");\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Fix atob() and btoa() so they can handle Unicode\n\t\tbtoa: str => btoa(unescape(encodeURIComponent(str))),\n\t\tatob: str => decodeURIComponent(escape(window.atob(str)))\n\t}\n}));\n\n})(Bliss);\n"],"sourceRoot":"/source/"}