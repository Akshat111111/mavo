{"version":3,"sources":["expression.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_typeof","Symbol","iterator","obj","constructor","$","$$","_","Mavo","Expression","Class","expression","this","eval","data","oldValue","value","hooks","run","compile","exception","context","ERROR","toString","live","trim","static","serializers","BinaryExpression","node","serialize","left","operator","right","UnaryExpression","argument","CallExpression","callee","arguments","map","join","ConditionalExpression","test","consequent","alternate","MemberExpression","object","property","ArrayExpression","elements","Literal","raw","Identifier","name","ThisExpression","Compound","body","transformations","Functions","operators","type","ret","undefined","rewrite","code","parse","e","Function","self","jsep","lazy","simpleOperation","Object","keys","o","replace","operand","RegExp","addBinaryOp","removeBinaryOp","LogicalExpression","Syntax","start","end","regex","escapeRegExp","str","lastIndex","tokenize","match","exec","index","push","substring","create","element","syntax","getAttribute","prototype","bind","apply","concat","split","ESCAPE","Text","all","path","reduce","childNodes","scope","attribute","Primitive","getValueAttribute","getValue","nodeType","parentNode","children","normalize","textContent","template","primitive","Unit","get","computed","set","update","_this","expr","env","presentational","formatNumber","datatype","setValue","proxy","WeakMap","Expressions","_this2","expressions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","et","err","closest","traverse","dependents","Set","active","addEventListener","evt","isDeleted","size","getRelativeData","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ref","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","exp","extract","slice","_this3","is","attributes","forEach","child","Node","_this4","dirty","null","unhandled","mavo","getData","Proxy","walkUp","properties","add","has","find","item","filter","Error","_this5","requestAnimationFrame","Bliss"],"mappings":"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","file":"mavo.min.js","sourcesContent":["(function($, $$) {\n\nvar _ = Mavo.Expression = $.Class({\n\tconstructor: function(expression) {\n\t\tthis.expression = expression;\n\t},\n\n\teval: function(data) {\n\t\tthis.oldValue = this.value;\n\n\t\t// TODO convert to new Function() which is more optimizable by JS engines.\n\t\t// Also, cache the function, since only data changes across invocations.\n\t\tMavo.hooks.run(\"expression-eval-beforeeval\", this);\n\n\t\ttry {\n\t\t\tif (!this.function) {\n\t\t\t\tthis.function = _.compile(this.expression);\n\t\t\t}\n\n\t\t\tthis.value = this.function(data);\n\t\t}\n\t\tcatch (exception) {\n\t\t\tMavo.hooks.run(\"expression-eval-error\", {context: this, exception});\n\n\t\t\tthis.value = _.ERROR;\n\t\t}\n\n\t\treturn this.value;\n\t},\n\n\ttoString() {\n\t\treturn this.expression;\n\t},\n\n\tlive: {\n\t\texpression: function(value) {\n\t\t\tvar code = value = value.trim();\n\n\t\t\tthis.function = null;\n\t\t}\n\t},\n\n\tstatic: {\n\t\tERROR: \"N/A\",\n\n\t\tserializers: {\n\t\t\t\"BinaryExpression\": node => `${_.serialize(node.left)} ${node.operator} ${_.serialize(node.right)}`,\n\t\t\t\"UnaryExpression\": node => `${node.operator}${_.serialize(node.argument)}`,\n\t\t\t\"CallExpression\": node => `${_.serialize(node.callee)}(${node.arguments.map(_.serialize).join(\", \")})`,\n\t\t\t\"ConditionalExpression\": node => `${_.serialize(node.test)}? ${_.serialize(node.consequent)} : ${_.serialize(node.alternate)}`,\n\t\t\t\"MemberExpression\": node => `${_.serialize(node.object)}[${_.serialize(node.property)}]`,\n\t\t\t\"ArrayExpression\": node => `[${node.elements.map(_.serialize).join(\", \")}]`,\n\t\t\t\"Literal\": node => node.raw,\n\t\t\t\"Identifier\": node => node.name,\n\t\t\t\"ThisExpression\": node => \"this\",\n\t\t\t\"Compound\": node => node.body.map(_.serialize).join(\" \")\n\t\t},\n\n\t\ttransformations: {\n\t\t\t\"BinaryExpression\": node => `${Mavo.Functions.operators[node.operator] || node.operator}(${_.serialize(node.left)}, ${_.serialize(node.right)})`,\n\t\t\t\"CallExpression\": node => {\n\t\t\t\tif (node.callee.type == \"Identifier\" && node.callee.name == \"if\") {\n\t\t\t\t\tnode.callee.name = \"iff\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tserialize: node => {\n\t\t\tif (_.transformations[node.type]) {\n\t\t\t\tvar ret = _.transformations[node.type](node);\n\n\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _.serializers[node.type](node);\n\t\t},\n\n\t\trewrite: function(code) {\n\t\t\ttry {\n\t\t\t\treturn _.serialize(_.parse(code));\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// Parsing as MavoScript failed, falling back to plain JS\n\t\t\t\treturn code;\n\t\t\t}\n\t\t},\n\n\t\tcompile: function(code) {\n\t\t\tcode = _.rewrite(code);\n\n\t\t\treturn new Function(\"data\", `with(Mavo.Functions._Trap)\n\t\t\t\t\twith(data) {\n\t\t\t\t\t\treturn ${code};\n\t\t\t\t\t}`);\n\t\t},\n\n\t\tparse: self.jsep,\n\n\t\tlazy: {\n\t\t\tsimpleOperation: function() {\n\t\t\t\tvar operator = Object.keys(Mavo.Functions.operators).map(o => o.replace(/[|*+]/g, \"\\\\$&\")).join(\"|\");\n\t\t\t\tvar operand = \"\\\\s*(\\\\b[\\\\w.]+\\\\b)\\\\s*\";\n\n\t\t\t\treturn RegExp(`(?:^|\\\\()${operand}(${operator})${operand}(?:$|\\\\))`, \"g\");\n\t\t\t}\n\t\t}\n\t}\n});\n\nif (self.jsep) {\n\tjsep.addBinaryOp(\"and\", 2);\n\tjsep.addBinaryOp(\"or\", 2);\n\tjsep.addBinaryOp(\"=\", 6);\n\tjsep.removeBinaryOp(\"===\");\n\tjsep.removeBinaryOp(\"==\"); \n}\n\n_.serializers.LogicalExpression = _.serializers.BinaryExpression;\n_.transformations.LogicalExpression = _.transformations.BinaryExpression;\n\n(function() {\nvar _ = Mavo.Expression.Syntax = $.Class({\n\tconstructor: function(start, end) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.regex = RegExp(`${Mavo.escapeRegExp(start)}([\\\\S\\\\s]+?)${Mavo.escapeRegExp(end)}`, \"gi\");\n\t},\n\n\ttest: function(str) {\n\t\tthis.regex.lastIndex = 0;\n\n\t\treturn this.regex.test(str);\n\t},\n\n\ttokenize: function(str) {\n\t\tvar match, ret = [], lastIndex = 0;\n\n\t\tthis.regex.lastIndex = 0;\n\n\t\twhile ((match = this.regex.exec(str)) !== null) {\n\t\t\t// Literal before the expression\n\t\t\tif (match.index > lastIndex) {\n\t\t\t\tret.push(str.substring(lastIndex, match.index));\n\t\t\t}\n\n\t\t\tlastIndex = this.regex.lastIndex;\n\n\t\t\tret.push(new Mavo.Expression(match[1]));\n\t\t}\n\n\t\t// Literal at the end\n\t\tif (lastIndex < str.length) {\n\t\t\tret.push(str.substring(lastIndex));\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tstatic: {\n\t\tcreate: function(element) {\n\t\t\tif (element) {\n\t\t\t\tvar syntax = element.getAttribute(\"data-expressions\");\n\n\t\t\t\tif (syntax) {\n\t\t\t\t\tsyntax = syntax.trim();\n\t\t\t\t\treturn /\\s/.test(syntax)? new _(...syntax.split(/\\s+/)) : _.ESCAPE;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tESCAPE: -1\n\t}\n});\n\n_.default = new _(\"[\", \"]\");\n\n})();\n\n(function() {\n\nvar _ = Mavo.Expression.Text = $.Class({\n\tconstructor: function(o) {\n\t\tthis.all = o.all; // the Mavo.Expressions object that this belongs to\n\t\tthis.node = o.node;\n\t\tthis.path = o.path;\n\t\tthis.syntax = o.syntax;\n\n\t\tif (!this.node) {\n\t\t\t// No node provided, figure it out from path\n\t\t\tthis.node = this.path.reduce((node, index) => {\n\t\t\t\treturn node.childNodes[index];\n\t\t\t}, this.all.scope.element);\n\t\t}\n\n\t\tthis.element = this.node;\n\t\tthis.attribute = o.attribute || null;\n\n\t\tif (this.attribute == \"data-content\") {\n\t\t\tthis.attribute = Mavo.Primitive.getValueAttribute(this.element);\n\t\t\tthis.expression = Mavo.Primitive.getValue(this.element, \"data-content\", null, {raw: true});\n\n\t\t\tif (!this.syntax.test(this.expression)) {\n\t\t\t\t// If no delimiters, assume entire thing is an expression\n\t\t\t\tthis.expression = this.syntax.start + this.expression + this.syntax.end;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this.node.nodeType === 3) {\n\t\t\t\tthis.element = this.node.parentNode;\n\n\t\t\t\t// If no element siblings make this.node the element, which is more robust\n\t\t\t\t// Same if attribute, there are no attributes on a text node!\n\t\t\t\tif (!this.node.parentNode.children.length || this.attribute) {\n\t\t\t\t\tthis.node = this.element;\n\t\t\t\t\tthis.element.normalize();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.expression = (this.attribute? this.node.getAttribute(this.attribute) : this.node.textContent).trim();\n\t\t}\n\n\t\tthis.template = o.template? o.template.template : this.syntax.tokenize(this.expression);\n\n\t\t// Is this a computed property?\n\t\tvar primitive = Mavo.Unit.get(this.element);\n\t\tif (primitive && this.attribute === primitive.attribute) {\n\t\t\tthis.primitive = primitive;\n\t\t\tprimitive.computed = true; // Primitives containing an expression as their value are implicitly computed\n\t\t}\n\n\t\tMavo.hooks.run(\"expressiontext-init-end\", this);\n\n\t\t_.elements.set(this.element, [...(_.elements.get(this.element) || []), this]);\n\t},\n\n\tupdate: function(data) {\n\t\tthis.data = data;\n\n\t\tvar ret = {};\n\n\t\tret.value = this.value = this.template.map(expr => {\n\t\t\tif (expr instanceof Mavo.Expression) {\n\t\t\t\tvar env = {context: this, expr};\n\n\t\t\t\tMavo.hooks.run(\"expressiontext-update-beforeeval\", env);\n\n\t\t\t\tenv.value = env.expr.eval(data);\n\n\t\t\t\tMavo.hooks.run(\"expressiontext-update-aftereval\", env);\n\n\t\t\t\tif (env.value === undefined || env.value === null) {\n\t\t\t\t\t// Don’t print things like \"undefined\" or \"null\"\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\treturn env.value;\n\t\t\t}\n\n\t\t\treturn expr;\n\t\t});\n\n\t\tif (!this.attribute) {\n\t\t\t// Separate presentational & actual values only apply when content is variable\n\t\t\tret.presentational = this.value.map(value => {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\treturn value.join(\", \");\n\t\t\t\t}\n\n\t\t\t\tif (typeof value == \"number\") {\n\t\t\t\t\treturn Mavo.Primitive.formatNumber(value);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t});\n\n\t\t\tret.presentational = ret.presentational.length === 1? ret.presentational[0] : ret.presentational.join(\"\");\n\t\t}\n\n\t\tret.value = ret.value.length === 1? ret.value[0] : ret.value.join(\"\");\n\n\t\tif (this.primitive && this.template.length === 1) {\n\t\t\tif (typeof ret.value === \"number\") {\n\t\t\t\tthis.primitive.datatype = \"number\";\n\t\t\t}\n\t\t\telse if (typeof ret.value === \"boolean\") {\n\t\t\t\tthis.primitive.datatype = \"boolean\";\n\t\t\t}\n\t\t}\n\n\t\tif (ret.presentational === ret.value) {\n\t\t\tret = ret.value;\n\t\t}\n\n\t\tif (this.primitive) {\n\t\t\tthis.primitive.value = ret;\n\t\t}\n\t\telse {\n\t\t\tMavo.Primitive.setValue(this.node, ret, this.attribute, {presentational: ret.presentational});\n\t\t}\n\t},\n\n\tproxy: {\n\t\tscope: \"all\"\n\t},\n\n\tstatic: {\n\t\telements: new WeakMap()\n\t}\n});\n\n})();\n\n(function() {\n\nvar _ = Mavo.Expressions = $.Class({\n\tconstructor: function(scope) {\n\t\tif (scope) {\n\t\t\tthis.scope = scope;\n\t\t\tthis.scope.expressions = this;\n\t\t}\n\n\t\tthis.all = []; // all Expression.Text objects in this scope\n\n\t\tMavo.hooks.run(\"expressions-init-start\", this);\n\n\t\tif (this.scope) {\n\t\t\tvar template = this.scope.template;\n\n\t\t\tif (template && template.expressions) {\n\t\t\t\t// We know which expressions we have, don't traverse again\n\t\t\t\tfor (let et of template.expressions.all) {\n\t\t\t\t\tthis.all.push(new Mavo.Expression.Text({\n\t\t\t\t\t\tpath: et.path,\n\t\t\t\t\t\tsyntax: et.syntax,\n\t\t\t\t\t\tattribute: et.attribute,\n\t\t\t\t\t\tall: this,\n\t\t\t\t\t\ttemplate: et\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar syntax = Mavo.Expression.Syntax.create(this.scope.element.closest(\"[data-expressions]\")) || Mavo.Expression.Syntax.default;\n\t\t\t\tthis.traverse(this.scope.element, undefined, syntax);\n\t\t\t}\n\t\t}\n\n\t\tthis.dependents = new Set();\n\n\t\tthis.active = true;\n\n\t\t// Watch changes and update value\n\t\tthis.scope.element.addEventListener(\"mavo:datachange\", evt => this.update());\n\n\t\tthis.update();\n\t},\n\n\t/**\n\t * Update all expressions in this scope\n\t */\n\tupdate: function callee() {\n\t\tif (!this.active || this.scope.isDeleted() || this.all.length + this.dependents.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar env = { context: this, data: this.scope.getRelativeData() };\n\n\t\tMavo.hooks.run(\"expressions-update-start\", env);\n\n\t\tfor (let ref of this.all) {\n\t\t\tref.update(env.data);\n\t\t}\n\n\t\tfor (let exp of this.dependents) {\n\t\t\texp.update();\n\t\t}\n\t},\n\n\textract: function(node, attribute, path, syntax) {\n\t\tif ((attribute && attribute.name == \"data-content\") ||\n\t\t    syntax.test(attribute? attribute.value : node.textContent)\n\t\t) {\n\t\t\tthis.all.push(new Mavo.Expression.Text({\n\t\t\t\tnode, syntax,\n\t\t\t\tpath: (path || \"\").slice(1).split(\"/\").map(i => +i),\n\t\t\t\tattribute: attribute && attribute.name,\n\t\t\t\tall: this\n\t\t\t}));\n\t\t}\n\t},\n\n\t// Traverse an element, including attribute nodes, text nodes and all descendants\n\ttraverse: function(node, path = \"\", syntax) {\n\t\tif (node.nodeType === 3 || node.nodeType === 8) { // Text node\n\t\t\t// Leaf node, extract references from content\n\t\t\tthis.extract(node, null, path, syntax);\n\t\t}\n\t\t// Traverse children and attributes as long as this is NOT the root of a child scope\n\t\t// (otherwise, it will be taken care of its own Expressions object)\n\t\telse if (node == this.scope.element || !Mavo.is(\"scope\", node)) {\n\t\t\tsyntax = Mavo.Expression.Syntax.create(node) || syntax;\n\n\t\t\tif (syntax === Mavo.Expression.Syntax.ESCAPE) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$$(node.attributes).forEach(attribute => this.extract(node, attribute, path, syntax));\n\t\t\t$$(node.childNodes).forEach((child, i) => this.traverse(child, `${path}/${i}`, syntax));\n\t\t}\n\t},\n\n\tstatic: {}\n});\n\n})();\n\nMavo.Node.prototype.getRelativeData = function(o = { dirty: true, computed: true, null: true }) {\n\to.unhandled = this.mavo.unhandled;\n\tvar ret = this.getData(o);\n\n\tif (self.Proxy && ret && typeof ret === \"object\") {\n\t\tret = new Proxy(ret, {\n\t\t\tget: (data, property) => {\n\t\t\t\tif (property in data) {\n\t\t\t\t\treturn data[property];\n\t\t\t\t}\n\n\t\t\t\tif (property == \"$index\") {\n\t\t\t\t\treturn this.index + 1;\n\t\t\t\t}\n\n\t\t\t\t// Look in ancestors\n\t\t\t\tvar ret = this.walkUp(scope => {\n\t\t\t\t\tif (property in scope.properties) {\n\t\t\t\t\t\t// TODO decouple\n\t\t\t\t\t\tscope.expressions.dependents.add(this.expressions);\n\n\t\t\t\t\t\treturn scope.properties[property].getRelativeData(o);\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thas: (data, property) => {\n\t\t\t\tif (property in data) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Property does not exist, look for it elsewhere\n\t\t\t\tif (property == \"$index\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// First look in ancestors\n\t\t\t\tvar ret = this.walkUp(scope => {\n\t\t\t\t\tif (property in scope.properties) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\t// Still not found, look in descendants\n\t\t\t\tret = this.find(property);\n\n\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\tif (Array.isArray(ret)) {\n\t\t\t\t\t\tret = ret.map(item => item.getData(o))\n\t\t\t\t\t\t\t\t .filter(item => item !== null);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret = ret.getData(o);\n\t\t\t\t\t}\n\n\t\t\t\t\tdata[property] = ret;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tset: function(data, property, value) {\n\t\t\t\tthrow Error(\"You can’t set data via expressions.\");\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ret;\n};\n\nMavo.hooks.add(\"scope-init-end\", function() {\n\tnew Mavo.Expressions(this);\n\tthis.expressions.update();\n});\n\nMavo.hooks.add(\"scope-render-start\", function() {\n\tthis.expressions.active = false;\n});\n\nMavo.hooks.add(\"scope-render-end\", function() {\n\trequestAnimationFrame(() => {\n\t\tthis.expressions.active = true;\n\t\tthis.expressions.update();\n\t});\n});\n\n})(Bliss, Bliss.$);\n"],"sourceRoot":"/source/"}