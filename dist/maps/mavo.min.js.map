{"version":3,"sources":["node.js"],"names":["$","$$","_","Mavo","Node","Class","abstract","constructor","element","mavo","_this","this","o","arguments","length","undefined","Error","uid","maxId","template","copies","push","fromTemplate","property","getProperty","type","Group","normalize","store","getAttribute","modes","modeObserver","Observer","records","console","log","mode","group","parentGroup","hooks","run","editing","constant","isRoot","name","readable","toLowerCase","data","getData","saved","walk","callback","walker","obj","ret","propagate","walkUp","edit","done","unbind","i","children","node","call","propagated","toJSON","prototype","_len","properties","Array","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","value","err","live","_this2","_mode","sneak","set","toggleAttribute","static","create","_Mavo$Unit","is","collection","Collection","Unit","apply","hasAttribute","id","classList","setAttribute","Bliss"],"mappings":"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","file":"mavo.min.js","sourcesContent":["(function($, $$) {\n\nvar _ = Mavo.Node = $.Class({\n\tabstract: true,\n\tconstructor: function (element, mavo, o = {}) {\n\t\tif (!element || !mavo) {\n\t\t\tthrow new Error(\"Mavo.Node constructor requires an element argument and a mavo object\");\n\t\t}\n\n\t\tthis.uid = ++_.maxId;\n\n\t\tthis.element = element;\n\t\tthis.template = o.template;\n\n\t\tif (this.template) {\n\t\t\t// TODO remove if this is deleted\n\t\t\tthis.template.copies.push(this);\n\t\t}\n\t\telse {\n\t\t\tthis.copies = [];\n\t\t}\n\n\t\tthis.mavo = mavo;\n\n\t\tif (!this.fromTemplate(\"property\", \"type\", \"modes\")) {\n\t\t\tthis.property = _.getProperty(element);\n\t\t\tthis.type = Mavo.Group.normalize(element);\n\t\t\tthis.store = this.element.getAttribute(\"data-store\");\n\t\t\tthis.modes = this.element.getAttribute(\"data-mode\");\n\t\t}\n\n\t\tthis.modeObserver = new Mavo.Observer(this.element, \"data-mode\", records => {\n\t\t\tconsole.log(\"%cmutation observer on\", \"color:purple;\", this.property, this.uid, this.template);\n\t\t\tthis.mode = this.element.getAttribute(\"data-mode\");\n\t\t\tthis[this.mode == \"edit\"? \"edit\" : \"done\"]();\n\t\t});\n\n\t\tthis.mode = this.modes || \"read\";\n\n\t\tthis.group = this.parentGroup = o.group;\n\n\t\tMavo.hooks.run(\"node-init-end\", this);\n\t},\n\n\tget editing() {\n\t\treturn this.mode == \"edit\";\n\t},\n\n\tget constant() {\n\t\t// Is a \"constant\" if only allowed mode is read\n\t\treturn this.modes == \"read\";\n\t},\n\n\tget isRoot() {\n\t\treturn !this.property;\n\t},\n\n\tget name() {\n\t\treturn Mavo.readable(this.property || this.type).toLowerCase();\n\t},\n\n\tget data() {\n\t\treturn this.getData();\n\t},\n\n\tget saved() {\n\t\treturn this.store !== \"none\";\n\t},\n\n\twalk: function(callback) {\n\t\tvar walker = obj => {\n\t\t\tvar ret = callback(obj);\n\n\t\t\tif (ret !== false) {\n\t\t\t\tobj.propagate && obj.propagate(walker);\n\t\t\t}\n\t\t};\n\n\t\twalker(this);\n\t},\n\n\twalkUp: function(callback) {\n\t\tvar group = this;\n\n\t\twhile (group = group.parentGroup) {\n\t\t\tvar ret = callback(group);\n\n\t\t\tif (ret !== undefined) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t},\n\n\tedit: function() {\n\t\tthis.mode = \"edit\";\n\n\t\tthis.propagate(\"edit\");\n\n\t\tMavo.hooks.run(\"node-edit-end\", this);\n\t},\n\n\tdone: function() {\n\t\tthis.mode = \"read\";\n\t\t$.unbind(this.element, \".mavo:edit\");\n\n\t\tthis.propagate(\"done\");\n\n\t\tMavo.hooks.run(\"node-done-end\", this);\n\t},\n\n\tpropagate: function(callback) {\n\t\tfor (let i in this.children) {\n\t\t\tlet node = this.children[i];\n\n\t\t\tif (node instanceof Mavo.Node) {\n\t\t\t\tif (typeof callback === \"function\") {\n\t\t\t\t\tcallback.call(node, node);\n\t\t\t\t}\n\t\t\t\telse if (callback in node) {\n\t\t\t\t\tnode[callback]();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tpropagated: [\"save\", \"revert\"],\n\n\ttoJSON: Mavo.prototype.toJSON,\n\n\tfromTemplate: function(...properties) {\n\t\tif (this.template) {\n\t\t\tfor (let property of properties) {\n\t\t\t\tthis[property] = this.template[property];\n\t\t\t}\n\t\t}\n\n\t\treturn !!this.template;\n\t},\n\n\tlive: {\n\t\tmode: function (value) {\n\t\t\tif (this._mode != value) {\n\t\t\t\t// If we don't do this, calling setAttribute below will\n\t\t\t\t// result in infinite recursion\n\t\t\t\tthis._mode = value;\n\n\t\t\t\tthis.modeObserver.sneak(() => {\n\t\t\t\t\tvar set = this.modes || this.mode == \"edit\";\n\t\t\t\t\t$.toggleAttribute(this.element, \"data-mode\", value, set);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t},\n\n\tstatic: {\n\t\tmaxId: 0,\n\n\t\tcreate: function(element, mavo, o = {}) {\n\t\t\tif (Mavo.is(\"multiple\", element) && !o.collection) {\n\t\t\t\treturn new Mavo.Collection(element, mavo, o);\n\t\t\t}\n\n\t\t\treturn Mavo.Unit.create(...arguments);\n\t\t},\n\n\t\t/**\n\t\t * Get & normalize property name, if exists\n\t\t */\n\t\tgetProperty: function(element) {\n\t\t\tvar property = element.getAttribute(\"property\") || element.getAttribute(\"itemprop\");\n\n\t\t\tif (!property && element.hasAttribute(\"property\")) {\n\t\t\t\tproperty = element.name || element.id || element.classList[0];\n\t\t\t}\n\n\t\t\tif (property) {\n\t\t\t\telement.setAttribute(\"property\", property);\n\t\t\t}\n\n\t\t\treturn property;\n\t\t}\n\t}\n});\n\n})(Bliss, Bliss.$);\n"],"sourceRoot":"/source/"}