{"version":3,"sources":["expression.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_typeof","Symbol","iterator","obj","constructor","$","$$","_","Mavo","Expression","Class","expression","this","eval","data","oldValue","value","hooks","run","compile","exception","context","toString","live","trim","static","serializers","BinaryExpression","node","serialize","left","operator","right","UnaryExpression","argument","CallExpression","callee","arguments","map","join","ConditionalExpression","test","consequent","alternate","MemberExpression","object","property","ArrayExpression","elements","Literal","raw","Identifier","name","ThisExpression","Compound","body","transformations","Script","getOperatorName","nodeLeft","operators","args","unshift","type","ret","undefined","rewrite","code","parse","e","Function","self","jsep","addBinaryOp","removeBinaryOp","LogicalExpression","Syntax","start","end","regex","RegExp","escapeRegExp","str","lastIndex","tokenize","match","exec","index","push","substring","create","element","syntax","getAttribute","prototype","bind","apply","concat","split","ESCAPE","Text","o","all","path","fallback","reduce","childNodes","group","attribute","Primitive","getValueAttribute","getValue","template","nodeType","parentNode","children","normalize","textContent","set","get","update","_this","expr","env","Error","presentational","formatNumber","primitive","datatype","setValue","proxy","WeakMap","search","filter","et","Expressions","_this2","expressions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","err","closest","traverse","dependents","Set","active","addEventListener","evt","isDeleted","size","getRelativeData","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ref","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","exp","extract","slice","_this3","is","attributes","forEach","child","Node","_this4","dirty","store","null","unhandled","mavo","getData","Proxy","walkUp","properties","add","has","find","item","expressionText","constant","_this5","requestAnimationFrame","Bliss"],"mappings":"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","file":"mavo.min.js","sourcesContent":["(function($, $$) {\n\nvar _ = Mavo.Expression = $.Class({\n\tconstructor: function(expression) {\n\t\tthis.expression = expression;\n\t},\n\n\teval: function(data) {\n\t\tthis.oldValue = this.value;\n\n\t\tMavo.hooks.run(\"expression-eval-beforeeval\", this);\n\n\t\ttry {\n\t\t\tif (!this.function) {\n\t\t\t\tthis.function = _.compile(this.expression);\n\t\t\t}\n\n\t\t\tthis.value = this.function(data);\n\t\t}\n\t\tcatch (exception) {\n\t\t\tMavo.hooks.run(\"expression-eval-error\", {context: this, exception});\n\n\t\t\tthis.value = exception;\n\t\t}\n\n\t\treturn this.value;\n\t},\n\n\ttoString() {\n\t\treturn this.expression;\n\t},\n\n\tlive: {\n\t\texpression: function(value) {\n\t\t\tvar code = value = value.trim();\n\n\t\t\tthis.function = null;\n\t\t}\n\t},\n\n\tstatic: {\n\t\t/**\n\t\t * These serializers transform the AST into JS\n\t\t */\n\t\tserializers: {\n\t\t\t\"BinaryExpression\": node => `${_.serialize(node.left)} ${node.operator} ${_.serialize(node.right)}`,\n\t\t\t\"UnaryExpression\": node => `${node.operator}${_.serialize(node.argument)}`,\n\t\t\t\"CallExpression\": node => `${_.serialize(node.callee)}(${node.arguments.map(_.serialize).join(\", \")})`,\n\t\t\t\"ConditionalExpression\": node => `${_.serialize(node.test)}? ${_.serialize(node.consequent)} : ${_.serialize(node.alternate)}`,\n\t\t\t\"MemberExpression\": node => `${_.serialize(node.object)}[${_.serialize(node.property)}]`,\n\t\t\t\"ArrayExpression\": node => `[${node.elements.map(_.serialize).join(\", \")}]`,\n\t\t\t\"Literal\": node => node.raw,\n\t\t\t\"Identifier\": node => node.name,\n\t\t\t\"ThisExpression\": node => \"this\",\n\t\t\t\"Compound\": node => node.body.map(_.serialize).join(\" \")\n\t\t},\n\n\t\t/**\n\t\t * These are run before the serializers and transform the expression to support MavoScript\n\t\t */\n\t\ttransformations: {\n\t\t\t\"BinaryExpression\": node => {\n\t\t\t\tlet name = Mavo.Script.getOperatorName(node.operator);\n\t\t\t\tlet details = Mavo.Script.operators[name];\n\n\t\t\t\t// Flatten same operator calls\n\t\t\t\tvar nodeLeft = node;\n\t\t\t\tvar args = [];\n\n\t\t\t\tdo {\n\t\t\t\t\targs.unshift(nodeLeft.right);\n\t\t\t\t\tnodeLeft = nodeLeft.left;\n\t\t\t\t} while (Mavo.Script.getOperatorName(nodeLeft.operator) === name);\n\n\t\t\t\targs.unshift(nodeLeft);\n\n\t\t\t\tif (args.length > 1) {\n\t\t\t\t\treturn `${name}(${args.map(_.serialize).join(\", \")})`;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"CallExpression\": node => {\n\t\t\t\tif (node.callee.type == \"Identifier\" && node.callee.name == \"if\") {\n\t\t\t\t\tnode.callee.name = \"iff\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tserialize: node => {\n\t\t\tif (_.transformations[node.type]) {\n\t\t\t\tvar ret = _.transformations[node.type](node);\n\n\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _.serializers[node.type](node);\n\t\t},\n\n\t\trewrite: function(code) {\n\t\t\ttry {\n\t\t\t\treturn _.serialize(_.parse(code));\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// Parsing as MavoScript failed, falling back to plain JS\n\t\t\t\treturn code;\n\t\t\t}\n\t\t},\n\n\t\tcompile: function(code) {\n\t\t\tcode = _.rewrite(code);\n\n\t\t\treturn new Function(\"data\", `with(Mavo.Functions._Trap)\n\t\t\t\t\twith(data) {\n\t\t\t\t\t\treturn ${code};\n\t\t\t\t\t}`);\n\t\t},\n\n\t\tparse: self.jsep,\n\t}\n});\n\nif (self.jsep) {\n\tjsep.addBinaryOp(\"and\", 2);\n\tjsep.addBinaryOp(\"or\", 2);\n\tjsep.addBinaryOp(\"=\", 6);\n\tjsep.removeBinaryOp(\"===\");\n}\n\n_.serializers.LogicalExpression = _.serializers.BinaryExpression;\n_.transformations.LogicalExpression = _.transformations.BinaryExpression;\n\n(function() {\nvar _ = Mavo.Expression.Syntax = $.Class({\n\tconstructor: function(start, end) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.regex = RegExp(`${Mavo.escapeRegExp(start)}([\\\\S\\\\s]+?)${Mavo.escapeRegExp(end)}`, \"gi\");\n\t},\n\n\ttest: function(str) {\n\t\tthis.regex.lastIndex = 0;\n\n\t\treturn this.regex.test(str);\n\t},\n\n\ttokenize: function(str) {\n\t\tvar match, ret = [], lastIndex = 0;\n\n\t\tthis.regex.lastIndex = 0;\n\n\t\twhile ((match = this.regex.exec(str)) !== null) {\n\t\t\t// Literal before the expression\n\t\t\tif (match.index > lastIndex) {\n\t\t\t\tret.push(str.substring(lastIndex, match.index));\n\t\t\t}\n\n\t\t\tlastIndex = this.regex.lastIndex;\n\n\t\t\tret.push(new Mavo.Expression(match[1]));\n\t\t}\n\n\t\t// Literal at the end\n\t\tif (lastIndex < str.length) {\n\t\t\tret.push(str.substring(lastIndex));\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tstatic: {\n\t\tcreate: function(element) {\n\t\t\tif (element) {\n\t\t\t\tvar syntax = element.getAttribute(\"data-expressions\");\n\n\t\t\t\tif (syntax) {\n\t\t\t\t\tsyntax = syntax.trim();\n\t\t\t\t\treturn /\\s/.test(syntax)? new _(...syntax.split(/\\s+/)) : _.ESCAPE;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tESCAPE: -1\n\t}\n});\n\n_.default = new _(\"[\", \"]\");\n\n})();\n\n(function() {\n\nvar _ = Mavo.Expression.Text = $.Class({\n\tconstructor: function(o) {\n\t\tthis.all = o.all; // the Mavo.Expressions object that this belongs to\n\t\tthis.node = o.node;\n\t\tthis.path = o.path;\n\t\tthis.syntax = o.syntax;\n\t\tthis.fallback = o.fallback;\n\n\t\tif (!this.node) {\n\t\t\t// No node provided, figure it out from path\n\t\t\tthis.node = this.path.reduce((node, index) => {\n\t\t\t\treturn node.childNodes[index];\n\t\t\t}, this.all.group.element);\n\t\t}\n\n\t\tthis.element = this.node;\n\t\tthis.attribute = o.attribute || null;\n\n\t\tif (this.attribute == \"data-content\") {\n\t\t\tthis.attribute = Mavo.Primitive.getValueAttribute(this.element);\n\t\t\tthis.fallback = this.fallback || Mavo.Primitive.getValue(this.element, this.attribute, null, {raw: true});\n\t\t\tthis.expression = this.element.getAttribute(\"data-content\");\n\n\t\t\tthis.template = [new Mavo.Expression(this.expression)];\n\t\t\tthis.expression = this.syntax.start + this.expression + this.syntax.end;\n\t\t}\n\t\telse {\n\t\t\tif (this.node.nodeType === 3) {\n\t\t\t\tthis.element = this.node.parentNode;\n\n\t\t\t\t// If no element siblings make this.node the element, which is more robust\n\t\t\t\t// Same if attribute, there are no attributes on a text node!\n\t\t\t\tif (!this.node.parentNode.children.length || this.attribute) {\n\t\t\t\t\tthis.node = this.element;\n\t\t\t\t\tthis.element.normalize();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.expression = (this.attribute? this.node.getAttribute(this.attribute) : this.node.textContent).trim();\n\n\t\t\tthis.template = o.template? o.template.template : this.syntax.tokenize(this.expression);\n\t\t}\n\n\t\tMavo.hooks.run(\"expressiontext-init-end\", this);\n\n\t\t_.elements.set(this.element, [...(_.elements.get(this.element) || []), this]);\n\t},\n\n\tupdate: function(data) {\n\t\tthis.data = data;\n\n\t\tvar ret = {};\n\n\t\tret.value = this.value = this.template.map(expr => {\n\t\t\tif (expr instanceof Mavo.Expression) {\n\t\t\t\tvar env = {context: this, expr};\n\n\t\t\t\tMavo.hooks.run(\"expressiontext-update-beforeeval\", env);\n\n\t\t\t\tenv.value = env.expr.eval(data);\n\n\t\t\t\tMavo.hooks.run(\"expressiontext-update-aftereval\", env);\n\n\t\t\t\tif (env.value instanceof Error) {\n\t\t\t\t\treturn this.fallback !== undefined? this.fallback : env.expr.expression;\n\t\t\t\t}\n\t\t\t\tif (env.value === undefined || env.value === null) {\n\t\t\t\t\t// Don’t print things like \"undefined\" or \"null\"\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\treturn env.value;\n\t\t\t}\n\n\t\t\treturn expr;\n\t\t});\n\n\t\tif (!this.attribute) {\n\t\t\t// Separate presentational & actual values only apply when content is variable\n\t\t\tret.presentational = this.value.map(value => {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\treturn value.join(\", \");\n\t\t\t\t}\n\n\t\t\t\tif (typeof value == \"number\") {\n\t\t\t\t\treturn Mavo.Primitive.formatNumber(value);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t});\n\n\t\t\tret.presentational = ret.presentational.length === 1? ret.presentational[0] : ret.presentational.join(\"\");\n\t\t}\n\n\t\tret.value = ret.value.length === 1? ret.value[0] : ret.value.join(\"\");\n\n\t\tif (this.primitive && this.template.length === 1) {\n\t\t\tif (typeof ret.value === \"number\") {\n\t\t\t\tthis.primitive.datatype = \"number\";\n\t\t\t}\n\t\t\telse if (typeof ret.value === \"boolean\") {\n\t\t\t\tthis.primitive.datatype = \"boolean\";\n\t\t\t}\n\t\t}\n\n\t\tif (ret.presentational === ret.value) {\n\t\t\tret = ret.value;\n\t\t}\n\n\t\tif (this.primitive) {\n\t\t\tthis.primitive.value = ret;\n\t\t}\n\t\telse {\n\t\t\tMavo.Primitive.setValue(this.node, ret, this.attribute, {presentational: ret.presentational});\n\t\t}\n\t},\n\n\tproxy: {\n\t\tgroup: \"all\"\n\t},\n\n\tstatic: {\n\t\telements: new WeakMap(),\n\n\t\t/**\n\t\t * Search for Mavo.Expression.Text object(s) associated with a given element\n\t\t * and optionally an attribute.\n\t\t *\n\t\t * @return If one argument, array of matching Expression.Text objects.\n\t\t *         If two arguments, the matching Expression.Text object or null\n\t\t */\n\t\tsearch: function(element, attribute) {\n\t\t\tvar all = _.elements.get(element) || [];\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tif (!all.length) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn all.filter(et => et.attribute === attribute)[0] || null;\n\t\t\t}\n\n\t\t\treturn all;\n\t\t}\n\t}\n});\n\n})();\n\n(function() {\n\nvar _ = Mavo.Expressions = $.Class({\n\tconstructor: function(group) {\n\t\tif (group) {\n\t\t\tthis.group = group;\n\t\t\tthis.group.expressions = this;\n\t\t}\n\n\t\tthis.all = []; // all Expression.Text objects in this group\n\n\t\tMavo.hooks.run(\"expressions-init-start\", this);\n\n\t\tif (this.group) {\n\t\t\tvar template = this.group.template;\n\n\t\t\tif (template && template.expressions) {\n\t\t\t\t// We know which expressions we have, don't traverse again\n\t\t\t\tfor (let et of template.expressions.all) {\n\t\t\t\t\tthis.all.push(new Mavo.Expression.Text({\n\t\t\t\t\t\tpath: et.path,\n\t\t\t\t\t\tsyntax: et.syntax,\n\t\t\t\t\t\tattribute: et.attribute,\n\t\t\t\t\t\tall: this,\n\t\t\t\t\t\ttemplate: et\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar syntax = Mavo.Expression.Syntax.create(this.group.element.closest(\"[data-expressions]\")) || Mavo.Expression.Syntax.default;\n\t\t\t\tthis.traverse(this.group.element, undefined, syntax);\n\t\t\t}\n\t\t}\n\n\t\tthis.dependents = new Set();\n\n\t\tthis.active = true;\n\n\t\t// Watch changes and update value\n\t\tthis.group.element.addEventListener(\"mavo:datachange\", evt => this.update());\n\n\t\tthis.update();\n\t},\n\n\t/**\n\t * Update all expressions in this group\n\t */\n\tupdate: function callee() {\n\t\tif (!this.active || this.group.isDeleted() || this.all.length + this.dependents.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar env = { context: this, data: this.group.getRelativeData() };\n\n\t\tMavo.hooks.run(\"expressions-update-start\", env);\n\n\t\tfor (let ref of this.all) {\n\t\t\tref.update(env.data);\n\t\t}\n\n\t\tfor (let exp of this.dependents) {\n\t\t\texp.update();\n\t\t}\n\t},\n\n\textract: function(node, attribute, path, syntax) {\n\t\tif ((attribute && attribute.name == \"data-content\") ||\n\t\t    syntax.test(attribute? attribute.value : node.textContent)\n\t\t) {\n\t\t\tthis.all.push(new Mavo.Expression.Text({\n\t\t\t\tnode, syntax,\n\t\t\t\tpath: (path || \"\").slice(1).split(\"/\").map(i => +i),\n\t\t\t\tattribute: attribute && attribute.name,\n\t\t\t\tall: this\n\t\t\t}));\n\t\t}\n\t},\n\n\t// Traverse an element, including attribute nodes, text nodes and all descendants\n\ttraverse: function(node, path = \"\", syntax) {\n\t\tif (node.nodeType === 3 || node.nodeType === 8) { // Text node\n\t\t\t// Leaf node, extract references from content\n\t\t\tthis.extract(node, null, path, syntax);\n\t\t}\n\t\t// Traverse children and attributes as long as this is NOT the root of a child group\n\t\t// (otherwise, it will be taken care of its own Expressions object)\n\t\telse if (node == this.group.element || !Mavo.is(\"group\", node)) {\n\t\t\tsyntax = Mavo.Expression.Syntax.create(node) || syntax;\n\n\t\t\tif (syntax === Mavo.Expression.Syntax.ESCAPE) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$$(node.attributes).forEach(attribute => this.extract(node, attribute, path, syntax));\n\t\t\t$$(node.childNodes).forEach((child, i) => this.traverse(child, `${path}/${i}`, syntax));\n\t\t}\n\t},\n\n\tstatic: {}\n});\n\n})();\n\nMavo.Node.prototype.getRelativeData = function(o = { dirty: true, store: \"*\", null: true }) {\n\to.unhandled = this.mavo.unhandled;\n\n\tvar ret = this.getData(o);\n\n\tif (self.Proxy && ret && typeof ret === \"object\") {\n\t\tret = new Proxy(ret, {\n\t\t\tget: (data, property) => {\n\t\t\t\tif (property in data) {\n\t\t\t\t\treturn data[property];\n\t\t\t\t}\n\n\t\t\t\tif (property == \"$index\") {\n\t\t\t\t\treturn this.index + 1;\n\t\t\t\t}\n\n\t\t\t\t// Look in ancestors\n\t\t\t\tvar ret = this.walkUp(group => {\n\t\t\t\t\tif (property in group.properties) {\n\t\t\t\t\t\t// TODO decouple\n\t\t\t\t\t\tgroup.expressions.dependents.add(this.expressions);\n\n\t\t\t\t\t\treturn group.properties[property].getRelativeData(o);\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thas: (data, property) => {\n\t\t\t\tif (property in data) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Property does not exist, look for it elsewhere\n\t\t\t\tif (property == \"$index\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// First look in ancestors\n\t\t\t\tvar ret = this.walkUp(group => {\n\t\t\t\t\tif (property in group.properties) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\t// Still not found, look in descendants\n\t\t\t\tret = this.find(property);\n\n\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\tif (Array.isArray(ret)) {\n\t\t\t\t\t\tret = ret.map(item => item.getData(o))\n\t\t\t\t\t\t\t\t .filter(item => item !== null);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret = ret.getData(o);\n\t\t\t\t\t}\n\n\t\t\t\t\tdata[property] = ret;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tset: function(data, property, value) {\n\t\t\t\tthrow Error(\"You can’t set data via expressions.\");\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ret;\n};\n\nMavo.hooks.add(\"group-init-start\", function() {\n\tnew Mavo.Expressions(this);\n});\nMavo.hooks.add(\"primitive-init-start\", function() {\n\tthis.expressionText = Mavo.Expression.Text.search(this.element, this.attribute);\n\n\tif (this.expressionText) {\n\t\tthis.expressionText.primitive = this;\n\t\tthis.store = this.store || \"none\";\n\t\tthis.constant = true;\n\t}\n});\n\nMavo.hooks.add(\"group-init-end\", function() {\n\tthis.expressions.update();\n});\n\nMavo.hooks.add(\"group-render-start\", function() {\n\tthis.expressions.active = false;\n});\n\nMavo.hooks.add(\"group-render-end\", function() {\n\trequestAnimationFrame(() => {\n\t\tthis.expressions.active = true;\n\t\tthis.expressions.update();\n\t});\n});\n\n})(Bliss, Bliss.$);\n"],"sourceRoot":"/source/"}