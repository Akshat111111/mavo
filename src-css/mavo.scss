@import 'defs';

// Polyfill
[mv-app] [hidden] {
	display: none;
}

.mv-highlight {
	@include highlight(hsla(58, 100%, 50%, .5));
}

.mv-item-controls.mv-ui {
	all: initial;
	position: absolute;
	bottom: 100%;
	bottom: calc(100% - 1.1em);
	right: .1em;
	z-index: 10;
	filter: drop-shadow(0 .1em .1em rgba(0,0,0,.2));
	opacity: 0;
	pointer-events: none;
	border: solid transparent;
	border-width: .4em .5em .8em .5em;
	border-radius: 1em;
	white-space: nowrap;

	[mv-multiple]:hover:not(.mv-has-hovered-item) > &,
	[mv-multiple]:not(:hover):not(.mv-has-hovered-item) [mv-multiple]:focus > &,
	[mv-multiple]:not(:hover):not(.mv-has-hovered-item) [mv-multiple].mv-focus-within:not(:hover) > &,
	&:hover,
	[mv-multiple]:not(:hover):not(.mv-has-hovered-item) > &:focus,
	[mv-multiple]:not(:hover):not(.mv-has-hovered-item) > &.mv-focus-within {
		transition: .4s opacity;
		opacity: 1;
		pointer-events: auto;
	}

	button {
		all: unset;
		display: inline-block;
		vertical-align: middle;
		padding: .2em .3em;
		min-width: 1em;
		min-height: 1em;
		border: 1px solid rgba(0,0,0, .1);
		cursor: pointer;
		background: #eee no-repeat center;
		line-height: 1;
		font-size: 120%;
		text-align: center;

		&:not(:hover):not(:focus) {
			box-shadow: 0 .4em 1em white inset;
		}

		$radius: .3em;

		&:first-child {
			border-top-left-radius: $radius;
			border-bottom-left-radius: $radius;
		}

		&:last-child {
			border-top-right-radius: $radius;
			border-bottom-right-radius: $radius;
		}

		&:not(:first-child) {
			border-left: 0;
		}
	}

	.mv-delete {
		$color: rgb(200,0,0);
		color: $color;

		&::before {
			@extend %rubbish-bin;
			display: block;
		}

		&:hover, &:focus {
			background-color: $color;
			color: white;

			&::before {
				filter: saturate(0) brightness(600%);
			}
		}
	}

	.mv-add {
		$color: hsl(80, 80%, 40%);
		color: $color;

		&::before {
			content: "âœš";
		}

		&:hover, &:focus {
			background-color: $color;
			color: white;
		}
	}

	.mv-drag-handle {
		$color: hsl(0, 0%, 30%);
		cursor: move;

		&:active, &:focus {
			cursor: grabbing;
		}

		&::before {
			content: "â‰¡";
		}

		&:hover, &:focus {
			background-color: $color;
			color: white;
		}
	}

	[mv-app]:not([mv-permissions~="delete"]) & .mv-delete,
	[mv-app]:not([mv-permissions~="add"]) & .mv-add {
		display: none;
	}
}

[mv-multiple] {
	position: relative;

	&.mv-highlight {  // basically &:has(> .mv-item-controls:hover)
		@include highlight(hsla(80, 50%, 50%, .25), "!important");
	}

	&.mv-deleted {
		@include highlight(hsla(0,100%,50%,.2), "!important");
	}

	&.mv-deleted {
		display: block;

		button {
			display: inline-block;
			margin-left: .4em;
		}
	}

	.mv-deleted:not([mv-mode="edit"]) {
		display: none;
	}

	// Dragula styles
	&.gu-mirror {
		position: fixed !important;
		margin: 0 !important;
		z-index: 9999 !important;
		opacity: 0.8;
	}

	&.gu-transit {
		opacity: 0.2;
	}
}

.gu-hide {
	display: none !important;
}

.gu-unselectable {
	user-select: none !important;
}

button.mv-close {
	all: unset;
	float: right;
	width: 1.1em;
	padding-bottom: .1em;
	border: none;
	border-radius: 50%;
	margin: 0 0 0 1em;
	background: rgba(180, 0, 0, .6);
	color: white;
	font: bold 100%/1 sans-serif;
	cursor: pointer;
	text-align: center;

	&:hover {
		background: rgba(180, 0, 0, 1);
	}
}

[mv-app] {
	[property].mv-multiline {
		white-space: pre-line;
	}

	button.mv-add {
		display: inline-block;
		vertical-align: middle;
	}

	&:not([mv-permissions~="add"]) button.mv-add {
		display: none;
	}

	&:not([mv-permissions~="edit"]) {
		.mv-edit {
			display: none;
		}
	}

	&[mv-progress="Loading"] [mv-multiple] {
		display: none;
	}

	&[mv-progress]::after {
		content: "";
		display: inline-block;
		@extend %progress;
	}

	&.mv-highlight-unsaved .mv-unsaved-changes {
		@include highlight(hsla(180, 50%, 50%, .25), "!important");
	}

	&:not([mv-mode="edit"]) {
		.mv-empty {
			display: none;
		}
	}

	&[mv-mode="edit"],
	[mv-mode="edit"] {
		.mv-empty {
			opacity: .5;
		}

		[mv-multiple],
		.mv-editor {
			&:focus {
				outline: none;
			}
		}

		// Temporary, good for debugging keyboard usability
		.mv-editor:focus {
			box-shadow: 0 0 0 1px hsla(200,20%,60%,.5), 1px 1px .5em 1px rgba(0,0,0,.3) !important;
		}
	}
}

// CSS Variables make it easier to track inherited attributes
[mv-mode="read"] { --mv-mode: read; }
[mv-mode="edit"] { --mv-mode: edit; }
[mv-mode=""]     { --mv-mode: initial; }

// Primitives
[property][mv-mode="edit"]:not([typeof]):not([mv-group]) {
	& input.mv-editor,
	& select.mv-editor,
	& textarea.mv-editor {
		all: unset;
		cursor: auto;
	}

	&:hover {
		@include highlight(hsla(58, 100%, 50%, .2));
	}

	& textarea.mv-editor {
		display: block;
		box-sizing: border-box;
		width: 100%;
	}

	input.mv-editor {
		max-width: 100%;
	}
}

// Specific styling per element type

meta[property][mv-mode="edit"] {
	display: inline-block;
	padding: .15em .4em;
	border: 1px dashed;
	margin: 0 .2em;
	color: gray;
	font-weight: bold;

	&::before {
		content: attr(property);
	}
}

meter, progress {
	&[property][mv-mode="edit"] {
		cursor: ew-resize;
	}
}

.mv-popup {
	all: initial;
	position: fixed;
	z-index: 100;
	padding: 1em;
	border: 1px solid rgba(0,0,0,.3);
	border-radius: .4em;
	margin: .3em 0 0 -.5em;
	box-shadow: 0 .1em .3em rgba(0,0,0,.3);
	background: white;
	transform-origin: 1.4em -0.45em; // Magic numbers. No idea why.
	transition: .3s transform;

	&::before {
		content: "";
		position: absolute;
		top: -.36em;
		left: 1em;
		padding: .3em;
		border: inherit;
		border-right-width: 0;
		border-bottom-width: 0;
		background: inherit;
		transform: rotate(45deg)
	}

	&[hidden] {
		display: block;
		transform: scale(0);
	}

	input, select {
		display: block;
		font: inherit;
		min-width: 100%;
	}

	select[size] {
		border: 1px solid rgba(0,0,0,.2);
	}

	.mv-image-popup {
		.mv-image-preview {
			position: relative;
			display: inline-block;

			progress {
				position: absolute;
				left: 0;
				right: 0;
				bottom: 1em;
				width: 100%;

				&[value="0"],
				&[value="100"] {
					display: none;
				}
			}

			img {
				display: block;
				max-width: 100%;
			}
		}

		.mv-upload {
			display: block;
			margin: .8em 0;
		}

		.mv-tip {
			font-size: 70%;
			color: gray;
		}
	}
}

.mv-ui {
	a {
		color: inherit;
	}

	@media print {
		display: none !important;
	}
}

p.mv-error {
	position: fixed;
	top: 1em;
	left: 50%;
	z-index: 2;
	transform: translateX(-50%);
	padding: .5em 1em;
	border-radius: .3em;
	margin: 0;
	box-shadow: 0 .2em .2em rgba(0,0,0,.2);
	background: hsla(0,100%,85%,.9);
	color: hsl(0,100%,20%);
	text-shadow: 0 1px 1px hsla(0,0%,100%,.5);
	font-size: 120%;
	animation: error-appear .5s backwards;
	cursor: pointer;

	@keyframes error-appear {
		from {
			transform: translateX(-50%) translateY(-10vh);
			opacity: 0;
		}
	}

	&::before {
		content: "ðŸ˜³ Oh noes! ";
		color: hsl(0,50%,50%);
		text-transform: uppercase;
		font-size: 85%;
		font-weight: bold;
	}

	& + .mv-error {
		top: 4em;
		animation-delay: .5s;
	}
}

@import 'bar';
